name: NAStool Linux
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - version.py
      - .github/workflows/build-linux.yml
      - requirements.txt

jobs:
  Windows-build:
    runs-on: ubuntu-latest
    steps:
    - name: init Python 3.10.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10.10'
    - name: install dependent packages
      run: |
        python -m pip install --upgrade pip
        pip install wheel numpy==1.23.5 pyparsing==3.0.9 wxpython==4.2.0 pyinstaller==5.7.0
        git clone --depth=1 -b master https://github.com/NAStool/nas-tools --recurse-submodule
        cd nas-tools
        pip install -r requirements.txt
        echo ("NASTOOL_CONFIG=D:/a/nas-tools/nas-tools/nas-tools/config/config.yaml") >> $env:GITHUB_ENV
        echo $env:NASTOOL_CONFIG
      shell: pwsh
    - name: package through pyinstaller
      run: |
        pwd
        cd nas-tools
        cp ./windows/rely/upx.exe /usr/local/lib/python/3.10.10/x64/Scripts
        cp ./windows/rely/hook-cn2an.py /usr/local/lib/python/3.10.10/x64/lib/site-packages/pyinstaller/hooks
        cp ./windows/rely/hook-zhconv.py /usr/local/lib/python/3.10.10/x64/lib/site-packages/pyinstaller/hooks
        cp ./windows/rely/hook-iso639.py /usr/local/lib/python/3.10.10/x64/lib/site-packages/pyinstaller/hooks
        cp ./third_party.txt ./windows
        cp ./windows/rely/template.jinja2 /usr/local/lib/Python/3.10.10/x64/lib/site-packages/setuptools/_vendor/pyparsing/diagram
        cp -r ./web/. /usr/local/lib/python/3.10.10/x64/lib/site-packages/web
        cp -r ./config/. /usr/local/lib/python/3.10.10/x64/lib/site-packages/config
        cp -r ./db_scripts/. /usr/local/lib/python/3.10.10/x64/lib/site-packages/db_scripts
        cd windows
        pyinstaller nas-tools.spec
      shell: pwsh
    - name: upload windows file
      uses: actions/upload-artifact@v3
      with:
        name: windows
        path: D:/a/nas-tools/nas-tools/nas-tools/windows/dist/nas-tools.exe
